/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function() {

eval("\r\n// ------------------------\r\n// --- Global constants ---\r\n// ------------------------\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\r\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n};\r\nvar _a;\r\nconst projectEntryTemplate = document.getElementById(\"project-entry-template\");\r\nconst projectContainer = document.getElementById(\"project-container\");\r\nconst introSubtitle = (_a = document.getElementById(\"intro-container\")) === null || _a === void 0 ? void 0 : _a.getElementsByTagName(\"p\")[0];\r\nconst backgroundVideo = document.getElementById(\"background-video\");\r\nconst projectEntryIntroAnimationWaiter = cooldownPool(10);\r\nconst emptyProject = {\r\n    title: \"\",\r\n    thumbnail: \"\",\r\n    url: \"\"\r\n};\r\nconst projects = [\r\n    {\r\n        title: \"Rezrog\",\r\n        thumbnail: \"thumbnails/rezrog-thumbnail.png\",\r\n        url: \"https://store.steampowered.com/app/548370/Rezrog/\"\r\n    },\r\n    {\r\n        title: \"Seacurity Breach\",\r\n        thumbnail: \"thumbnails/seacurity-breach-thumbnail.png\",\r\n        url: \"https://store.steampowered.com/app/906660/Seacurity_Breach/\"\r\n    },\r\n    {\r\n        title: \"Swipe Escape\",\r\n        thumbnail: \"thumbnails/swipe-escape-thumbnail.png\",\r\n        url: \"https://play.google.com/store/apps/details?id=com.vaporwaveconfidential.swipeescape\",\r\n    },\r\n    {\r\n        title: \"ParProf\",\r\n        thumbnail: \"thumbnails/parprof-thumbnail.png\",\r\n        url: \"https://parprof.lv/\"\r\n    },\r\n    {\r\n        title: \"Unity Assets\",\r\n        thumbnail: \"thumbnails/unity-assets-thumbnail.png\",\r\n        url: \"https://assetstore.unity.com/publishers/41656\"\r\n    },\r\n    {\r\n        title: \"Tetris\",\r\n        thumbnail: \"thumbnails/tetris-thumbnail.png\",\r\n        url: \"https://quickz.github.io/Tetris/\"\r\n    },\r\n    {\r\n        title: \"FreeCodeCamp Legacy Front End certificate\",\r\n        thumbnail: \"thumbnails/freecodecamp-thumbnail.png\",\r\n        url: \"https://www.freecodecamp.org/certification/quickz/legacy-front-end\"\r\n    },\r\n    {\r\n        title: \"Memory Card Game\",\r\n        thumbnail: \"thumbnails/memory-card-game-thumbnail.png\",\r\n        url: \"https://quickz.github.io/Memory-Card-Game/\"\r\n    },\r\n    {\r\n        title: \"SWF Game File Extractor\",\r\n        thumbnail: \"thumbnails/swf-game-file-extractor-thumbnail.png\",\r\n        url: \"https://github.com/Quickz/swf-game-file-extractor\"\r\n    },\r\n    {\r\n        title: \"Path Finding Visual\",\r\n        thumbnail: \"thumbnails/path-finding-visual-thumbnail.png\",\r\n        url: \"https://quickz.github.io/PathFinding-Visual/\"\r\n    },\r\n    {\r\n        title: \"Visual Studio video series\",\r\n        thumbnail: \"thumbnails/visual-studio-tips-thumbnail.png\",\r\n        url: \"https://www.youtube.com/watch?v=EmLgSxfhoxI&list=PLz-QWJhJz3MHYx0oO-9Qmyw-EGGRK_Cw6&ab_channel=Quickz\"\r\n    },\r\n    emptyProject\r\n];\r\n// ------------------------\r\n// -------- Global --------\r\n// ------------------------\r\nbackgroundVideo.style.filter = \"opacity(0%)\";\r\nlet backgroundVideoStarted = false;\r\nbackgroundVideo.oncanplaythrough = function () {\r\n    if (backgroundVideoStarted)\r\n        return;\r\n    backgroundVideoStarted = true;\r\n    fadeIn(backgroundVideo, 500);\r\n};\r\nfillProjectContainer();\r\nstartChangingSubtitle();\r\n// -------------------------\r\n// -------- Methods --------\r\n// -------------------------\r\nfunction fadeIn(element, durationInMiliseconds) {\r\n    const framesPerSecond = 50;\r\n    const frames = durationInMiliseconds / 1000 * framesPerSecond;\r\n    const singleFrameDuration = durationInMiliseconds / frames;\r\n    const opacityPerFrame = 1 / frames;\r\n    // Node:\r\n    // Using filter opacity instead of opacity\r\n    // due to a weird issue where the last assignment\r\n    // which set opacity to 1 caused a weird blink\r\n    return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\r\n        let opacity = 0;\r\n        element.style.filter = \"opacity(0%)\";\r\n        while (opacity < 1 - opacityPerFrame) {\r\n            opacity += opacityPerFrame;\r\n            element.style.filter = `opacity(${opacity * 100}%)`;\r\n            yield sleep(singleFrameDuration);\r\n        }\r\n        opacity = 1;\r\n        element.style.filter = `opacity(100%)`;\r\n        resolve(null);\r\n    }));\r\n}\r\nfunction growIn(element) {\r\n    element.classList.add(\"play-grow-in\");\r\n    element.addEventListener(\"animationend\", () => {\r\n        element.classList.remove(\"play-grow-in\");\r\n    });\r\n}\r\nfunction fillProjectContainer() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        for (let i = 0; i < projects.length; i++) {\r\n            const entry = createEntry();\r\n            entry.style.visibility = \"hidden\";\r\n            if (projects[i] == emptyProject) {\r\n                entry.style.visibility = \"hidden\";\r\n                entry.style.height = \"0px\";\r\n            }\r\n            else {\r\n                fillEntry(entry, projects[i]);\r\n            }\r\n            const entryThumbnail = entry.getElementsByClassName(\"thumbnail\")[0];\r\n            entryThumbnail.onload = function () {\r\n                return __awaiter(this, void 0, void 0, function* () {\r\n                    entryThumbnail.onload = null;\r\n                    yield projectEntryIntroAnimationWaiter.next();\r\n                    entry.style.visibility = \"visible\";\r\n                    growIn(entry);\r\n                });\r\n            };\r\n            projectContainer.appendChild(entry);\r\n        }\r\n    });\r\n}\r\n// Acts as a queue of cooldowns.\r\n// If you run 10 things at once\r\n// but wish to ensure a minimum X cooldown\r\n// between all of them, use this method.\r\nfunction cooldownPool(cooldownInMiliseconds) {\r\n    return __asyncGenerator(this, arguments, function* cooldownPool_1() {\r\n        while (true) {\r\n            yield yield __await(null);\r\n            yield __await(sleep(cooldownInMiliseconds));\r\n        }\r\n    });\r\n}\r\nfunction fillEntry(entry, data) {\r\n    const titleLabel = entry.getElementsByClassName(\"title\")[0];\r\n    titleLabel.textContent = data.title;\r\n    entry.href = data.url;\r\n    const thumbnail = entry.getElementsByClassName(\"thumbnail\")[0];\r\n    thumbnail.src = data.thumbnail;\r\n    // Adding hover effect\r\n    titleLabel.hidden = true;\r\n    entry.onmouseover = function () {\r\n        titleLabel.hidden = false;\r\n    };\r\n    entry.onmouseleave = function () {\r\n        titleLabel.hidden = true;\r\n    };\r\n}\r\nfunction createEntry() {\r\n    let newNode = projectEntryTemplate.content.cloneNode(true);\r\n    return newNode.firstElementChild;\r\n}\r\nfunction setSubtitle(text, speed) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        for (let i = 1; i <= text.length; i++) {\r\n            introSubtitle.textContent = text.substr(0, i) + \"_\";\r\n            yield sleep(speed);\r\n        }\r\n    });\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nfunction startChangingSubtitle() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const delay = 35;\r\n        while (true) {\r\n            yield setSubtitle(\"I'm a Software Developer\", delay);\r\n            yield sleep(7000);\r\n            yield setSubtitle(\"I specialize in C# and .NET\", delay);\r\n            yield sleep(7000);\r\n        }\r\n    });\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.ts"]();
/******/ 	
/******/ })()
;